<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gsxy.guide.mapper.UserMapper">

    <resultMap type="com.gsxy.guide.domain.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="INTEGER"/>
        <result property="org" column="org" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>


    <!-- 用户名查找用户 -->
    <select id="findByUsername" resultType="com.gsxy.guide.domain.User" >
        select *
        from user
        where
            username =#{username}
        limit 1
    </select>

    <!--注册用户-->
    <insert id="userReg" parameterType="com.gsxy.guide.domain.User">
        insert into
            user
        (username,password,create_time,update_time,status,del_flag)
        values
            (#{username},#{password},#{createTime},#{updateTime},#{status},#{delFlag})
    </insert>

    <!--更新用户登录时间-->
    <update id="updateLoginTime" parameterType="com.gsxy.guide.domain.User">
        update user
        <set>
            <if test="true">
                update_by = #{updateBy},update_time = #{updateTime},
            </if>
        </set>
        where
        id = #{id}
    </update>


    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select *
        from user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
        id,user,name,password,name,role,org,create_by,create_time,update_by,update_time,status,del_flag
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="role != null">
                and role = #{role}
            </if>
            <if test="org != null and org != ''">
                and org = #{org}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="role != null">
                and role = #{role}
            </if>
            <if test="org != null and org != ''">
                and org = #{org}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(id, user, name, password, name, role, org, create_by, create_time, update_by, update_time,
                         status, del_flag)
        values (#{username}#{password}#{name}#{role}#{org}#{createBy}#{createTime}#{updateBy}#{updateTime}#{status}#{delFlag})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        user(id,user,name,password,name,role,org,create_by,create_time,update_by,update_time,status,del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}#{entity.password}#{entity.name}#{entity.role}#{entity.org}#{entity.createBy}#{entity.createTime}#{entity.updateBy}#{entity.updateTime}#{entity.status}#{entity.delFlag})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(id,user,name,password,name,role,org,create_by,create_time,update_by,update_time,status,del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}#{entity.password}#{entity.name}#{entity.role}#{entity.org}#{entity.createBy}#{entity.createTime}#{entity.updateBy}#{entity.updateTime}#{entity.status}#{entity.delFlag})
        </foreach>
        on duplicate key update
        username = values(username)password = values(password)name = values(name)role = values(role)org =
        values(org)create_by = values(create_by)create_time = values(create_time)update_by =
        values(update_by)update_time = values(update_time)status = values(status)del_flag = values(del_flag)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="org != null and org != ''">
                org = #{org},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
        </set>
        where id = #{id}
        limit 1
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user
        where id = #{id}
        limit 1
    </delete>

</mapper>

